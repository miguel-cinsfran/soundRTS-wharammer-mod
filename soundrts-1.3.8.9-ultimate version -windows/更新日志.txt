1.3.8.8：

现在可以指定worker开采的资源类型：
例如can_gather resource1 resource2
worker默认不能开采任何资源类型。
支持can_gather all;表示可以开采所有资源类型



移除了deposit中的extraction_time和extraction_qty。
然后在worker类加入了gather_time和gather_qty参数。
例如:
can_gather resource1 resource2 resource3 resource4 resource5
gather_time resource1 10 resource2 15 resource3 20 resource4 25 resource5 30;分别代表开采对应资源类型的时间
也可以分别定义时间，例如：
gather_time_resource1 10
gather_time_resource2 15
gather_qty resource1 2 resource2 3 resource3 4 resource4 5 resource5 6;开采各类资源一次所获得的数量。
也支持分别定义
gather_qty_resource1 2
gather_qty_resource2 3
也可以设定时间总量和数量总量。
gather_time all 10;表示开采所有资源的时间
gather_qty all 2;开采所有资源一次获得的数量。
也可以这样定义
can_gather resource1;只能开采资源类型1
gather_time 20;表示开采资源类型1的时间
gather_qty 2;表示开采一次资源1的数量
如果worker定义了只能开采一种资源类型，那么gather_time和gather_qty之后不用写具体的资源类型，只需要写数字即可。

并且这些参数都可以通过research改变。

# 升级效果示例

# 示例1：通过effect bonus方式提升gather_time（采集时间）
def faster_gathering
class upgrade
cost 10 5
time_cost 60
effect bonus gather_time 1  # 每级减少1秒的采集时间（使用bonus方式）
requirements lumbermill
end

# 示例2：通过effect gather_time方式设置特定资源的采集时间
def gold_gathering_expert
class upgrade
cost 15 5
time_cost 70
effect gather_time resource1 3  # 设置金矿采集时间为3秒
requirements blacksmith
end

# 示例3：通过effect gather_qty方式设置特定资源的采集数量
def gold_yield_expert
class upgrade
cost 15 5
time_cost 70
effect gather_qty resource1 12  # 设置金矿采集数量为12
requirements blacksmith
end

# 示例4：通过effect gather_time和effect gather_qty设置所有资源类型
def master_gatherer
class upgrade
cost 20 10
time_cost 80
effect gather_time all 2.5  # 设置所有资源采集时间为2.5秒
effect gather_qty all 15    # 设置所有资源采集数量为15
requirements castle
end

# 示例5：通过effect gather_time和effect gather_qty单独设置不同资源类型
def resource_specialist
class upgrade
cost 20 10
time_cost 80
effect gather_time resource1 2 resource2 3  # 设置金矿2秒，木材3秒
effect gather_qty resource1 10 resource2 12  # 设置金矿10个，木材12个
requirements castle
end

# 示例6：通过effect bonus方式提升production_time（生产时间）
def faster_production
class upgrade
cost 15 8
time_cost 80
effect bonus production_time 30  # 每级减少30秒的生产时间
requirements lumbermill
end

# 示例7：通过effect production_time方式设置生产时间
def rapid_production
class upgrade
cost 15 8
time_cost 80
effect production_time 180  # 设置生产时间为180秒
requirements lumbermill
end

# 示例8：通过effect bonus方式提升production_qty（生产数量）
def enhanced_production
class upgrade
cost 20 10
time_cost 90
effect bonus production_qty 10  # 每级增加10单位的产量
requirements lumbermill
end

# 示例9：通过effect production_qty方式设置生产数量
def mass_production
class upgrade
cost 20 10
time_cost 90
effect production_qty 70  # 设置生产数量为70
requirements lumbermill
end

# 示例10：通过effect bonus方式提升rewards_resource（击杀奖励）
def better_spoils
class upgrade
cost 25 15
time_cost 100
effect bonus rewards_resource 10 5  # 每级增加10金和5木的战利品
requirements castle
end

# 示例11：通过effect rewards_resource方式设置击杀奖励
def war_profiteer
class upgrade
cost 25 15
time_cost 100
effect rewards_resource 80 20  # 设置击杀奖励为80金和20木
requirements castle
end

1.3.8.7
Added a sound settings option in the menu, allowing players to adjust the volume according to their preferences.
Introduced a new feature that grants resource rewards for killing units or destroying structures:
is_rewards 1; If this parameter is set to 1, resources will be rewarded when the unit or structure is destroyed. If set to 0, the feature is disabled.
rewards_resource 50 0; The first number represents the amount of resource 1 dropped after a unit is killed, while the second number represents the amount of resource 2 dropped.
You can freely add this parameter when defining buildings and units.
In addition, destroying your own buildings now allows you to retrieve the consumed resource cost.

1.3.8.5:
实现了mod与专用地图相关联的功能。
现在玩家切换到某mod，那么游戏只会显示专属于该mod的专用地图，其他地图不显示。
要想做到这一点，你需要在某mod的根目录下创建multi文件夹，将地图放入即可，如果你没有创建multi文件夹，则游戏会显示所有地图。


1.3.8.4

1:修复了mdg或rdg_dodge_vs绝对闪避的问题。

2： 增加了建筑物可生产资源的功能，格式如下：
def gold_house
class building
cost 10 9
time_cost 70
hp_max 330
is_production 1;0表示该建筑不可生产资源
production_type resource1;表示该建筑可生产的资源类型，每个建筑只能生产一种资源类型
production_cost 2 0;生产成本
production_time 300;生产所需时间成本
production_qty 100;生产完成后获得的收益
can_start_produce;增加了这个字段后，玩家才可以在命令菜单中看到开始生产选项

当玩家点击开始生产后，建筑物会自动进行生产，每完成20%进度才会播报一次
生产完毕之后，资源会自动放入玩家的资源池中并自动开始下一轮生产。
玩家可以随时点击停止来终止生产。



1.3.8.3

1： 完善了继承机制，现在玩家可以实现非常灵活的单位继承。
例如：
is_a footman;继承footman的所有属性

is_a footman(hp_max mdg);选择性的继承单位的属性

is_a footman(apart hp_max);继承除了hp_max之外的其他属性，我称之为排除继承。
is_a footman(mdg mdf) knight(hp_max rdf);同时继承多个单位的属性
is_a footman knight archer;同时继承多个单位的一切
也许有的玩家对该功能不太理解，下面我将用一个例子来说明这个功能的强大之处与有意义的地方。

def light_armor;定义一个轻甲单位
class soldier

def heavy_armor
class soldier

def light_cavalry
is_a light_armor
hp_max 20
mdf 0.5
下面的属性我就不写了。

def heavy_cavalry
is_a heavy_armor
下面的属性我省略。

def spearmen
class soldier
mdg 4
mdg_vs light_armor 18;对轻甲有高伤害
light_cavalry属于light_armor，因此spearmen对继承了light_armor的所有单位都有克制

大家可以举一反三，这是继承机制最简单的用法。


2： 修复了射程错误导致单位有时候无法击中目标的bug。
修复了capture_hp_threshold无法使用的bug

1.3.8.2 - ultimate

新增夺取所有权的功能
当建筑或单位的血量达到夺取阈值时，单位会执行夺取。
一个简单的例子是wall和gate，夺取阈值的血量是30%，玩家可以进行调整。
style.txt里的关键字是capture_success和target_captured

新增mdg_projectile和rdg_projectile标识符，0为禁用，1为启用，作用是位于高地上有额外射程
新增mdg_cover_on_terrain和rdg_cover_on_terrain
mdg_dodge_on_terrain和rdg_dodge_on_terrain
可以规定单位在任意地形上的命中率和闪避率

删除了mdg_blic和rdg_blic

改进了建立在出口处的载具的工作方式
例如在出口处建立的墙和或门，可以与出口的任意一侧进行交互，例如可以load和unload任意一侧的单位；处于出口两侧的农民可以同时对墙或门进行修理
此外，无论观察者在出口的任意一侧都能看到容器与容器内的单位

修复了bindings.txt里不能映射resource3及以上的热键

修复了mdg_ready和rdg_ready无法正常工作的bug，包括mdg_ready_vs和rdg_ready_vs
修复了mdg_cd_vs和rdg_cd_vs无法正常工作的bug

修复了mdg_range_vs和rdg_range_vs以及minimal_range_vs无法正常工作的bug
修复了容器内单位攻击外部目标无法播放命中音效的bug

历经两个月的努力，我改进了soundrts，让他变成了一个相对自由且高灵活性的引擎。
但一个人精力有限，无法兼顾到方方面面，因此需要大量玩家帮忙测试
也希望soundmud进行指导

1:单位属性大改进
;hp系统：
hp_start; 可以设置初始hp
hp_start_vs;可以针对特定单位的hp_start修正;待测试
hp_max_vs;针对特定单位的特殊hp_max修正；待测试

伤害系统：
删除了damage单一的伤害类型，新增以下伤害类型：
mdg;melee_damage， 近战伤害类型
rdg;range_damage，远程伤害类型
mdg_vs;针对特定单位的特殊近战伤害修正
rdg_vs;针对特定单位的特殊远程伤害修正

mdg_range;代替单一的range
rdg_range同上
mdg_minimal_range;代替单一的minimal_range
rdg_minimal_range同上
mdg_range_vs;针对特定单位的特殊mdg_range修正
rdg_range_vs;针对特定单位的特殊rdg_range修正
mdg_minimal_range_vs;针对特定单位的特殊mdg_minimal_range修正
rdg_minimal_range_vs;针对特定单位的特殊rdg_minimal_range修正

mdg_targets;代替了单一的target_types
rdg_targets;代替单一的target_types
mdg_delay;近战命中延迟机制，可以规定发出攻击后多长时间命中目标，例如mdg_delay 0.2，代表攻击发出后，投射物会以没格0.2秒的飞行速度前进直到命中目标。
rdg_delay同上
mdg_blic;规定投射物的抛物线
rdg_blic同上
这些并非是真实的投射物，而是利用延长命中时间的方式模拟投射物飞行。

mdg_splash;代替简单的splash，可以设定具体的值，而不是像以前那样只有1和0
rdg_splash同上
mdg_radius;代替单一的damage_radius
rdg_radius同上

mdg_splash_decay;近战溅射伤害衰减
rdg_splash_decay;远程溅射伤害衰减



;防御系统大改进
;删除单一的armor防御类型，新增以下类型：
mdf;melee_defense， 近战防御类型
rdf;range_defense，远程防御类型
mdf_vs;针对特定单位的特殊mdf修正
rdf_vs;针对特定单位的特殊rdf修正

;冷却与攻击前摇
mdg_cd;代替单一的cooldown
rdg_cd同上
mdg_cd_vs;针对特定单位的特殊mdg_cd修正
rdg_cd_vs;针对特定单位的特殊rdg_cd修正
mdg_ready;近战前摇
rdg_cd;远程前摇
mdg_ready_vs;针对特定单位的特殊mdg_ready修正
rdg_ready_vs;针对特定单位的特殊rdg_ready修正

;命中与闪避

mdg_cover;近战命中率
rdg_cover;远程命中率
mdg_cover_vs;针对特定单位的特殊mdg_cover修正
rdg_cover_vs;针对特定单位的特殊rdg_cover修正
mdg_dodge;近战闪避
rdg_dodge;远程闪避
mdg_dodge_vs;针对特定单位的特殊mdg_dodge修正
rdg_dodge_vs;针对特定单位的特殊rdg_dodge修正

speed;基础移动速度
speed_vs;针对特定单位的特殊speed修正，待测试。

;攻击序列系统
先设定一个基础伤害，例如：
mdg 12
mdg_cd 1.5
mdg_range 6
damage_seq mdg 3(damage 6 3 3)(interval 0.2)
这串代码的意思是设定一个近战攻击序列，执行三次近战伤害，伤害值分别为6 3 3正好=mdg 12，每次攻击的间隔为0.2秒。

 ;新增单位在载具内的行为
allow_units_attack;允许任意单位在载具内攻击外部目标，例如：
allow_units_attack archer表示允许弓箭手在载具内攻击外部目标
可以写多个单位，例如allow_units_attack archer footman
支持allow_units_attack all;允许所有单位攻击外部目标
如果不使用该参数则默认不允许任何单位攻击外部目标。
allow_units_add;允许每load一个单位可以给载具提供属性加成。
例如allow_units_add speed 0.5表示每load一个单位可以给载具提供0.5移动速度
允许多个属性加成，例如allow_units_add speed 0.5 mdg 2 mdg_cd 1.5

;upgrades系统改进
现在定义一个upgrade可以这样写：
def melee_weapon_and_defence
class upgrade
cost 8 10
time_cost 60
effect bonus mdg 1 mdf 2
也可以这样写：
effect bonus mdg 1
effect bonus mdf 2
或者可以这样写：
effect bonus mdg 1 mdf 2
effect bonus mdg_cd -0.5 mdg_ready -0.2
允许的参数还包括cost, food_provided, mdg_targets, rdg_targets 

此外，支持另一种定义方式
def melee_weapon_and_defense
class upgrade
effect apply_bonus mdg mdf mdg_cd mdg_ready
同样支持分组定义

def footman
class soldier
mdg_bonus 1
mdf_bonus 2
mdg_cd_bonus -0.5
mdg_ready_bonus -0.2
can_use melee_weapon_and_defense

支持多级升级

def lv1_melee_weapon
class upgrade
effect apply_bonus mdg

def lv2_melee_weapon
is_a lv1_melee_weapon

def lv3_melee_weapon
is_a lv2_melee_weapon

def footman
class soldier
mdg_bonus 1 1 2;代表前两次升级增加1mdg，第三次升级增加2mdg

;技能系统小改进
现在统一用class skill代替class ability

skill支持time_cost时间成本和cost资源成本参数
例如：
def a_summon_dragon
class skill
requirements u_summon_dragon
mana_cost 150
cost 10 15
time_cost 60
effect summon 120 2 dragon



修复了建筑物被运输单位load之后没有meadow的bug

玩家在游戏过程中可以给任意单位启用或禁用自动反击模式

新增站岗模式guard, 追击模式chace，在offensive和defensive之后。

将资源类型resource_type改成字符串，而不是以前的0或1
例如resource_type resource1;gold
resource_type resource2;wood

;音效系统重构

新增casting关键字，技能释放准备音效
mdg_missed和rdg_missed代替了原来的missed

launch_matk和launch_ratk代替了原来的launch_attack
matk_hit和ratk_hit代替了原来的attack_hit
matk_hit_vs;可以设定针对不同单位播放不同的命中音效
ratk_hit_vs同上
matk_hit_lv_1和ratk_hit_lv_1代替了原来的attack_hit_level_1
matk_hit_lv_1_vs和ratk_hit_lv_1_vs可以参考matk_hit_vs和ratk_hit_vs
matk_dodge和ratk_dodge，可以设定闪避音效
disappear;用来与death做区分，例如召唤物时间到了会播放disappear而不是death

