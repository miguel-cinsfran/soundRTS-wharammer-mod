1.3.8.2 - Ultimate
New Features and Improvements:
Added Capture Ownership Functionality
When the HP of a target building or unit reaches the capture threshold, our units can execute a capture operation.
A simple example is walls and gates, where the capture threshold is set at 30% HP, though this value can be adjusted by the player.
The related keywords in style.txt are capture_success and target_captured.
Added Identifiers for Projectile Mechanics:
mdg_projectile and rdg_projectile: Set to 0 to disable and 1 to enable. These identifiers allow ranged units located on higher ground to gain additional range.
mdg_cover_on_terrain and rdg_cover_on_terrain
mdg_dodge_on_terrain and rdg_dodge_on_terrain
These allow specific hit rate and dodge rate modifications for units on any terrain.
Removed Identifiers:
The mdg_blic and rdg_blic identifiers have been removed.
Improvements to Vehicle Mechanics near Exits:
Vehicles built near exits now have improved functionality:
Walls or gates placed near an exit can now interact with either side of the exit, enabling units to load or unload from any side.
Workers located on either side of the exit can simultaneously repair walls or gates.
Regardless of which side of the exit the observer is on, they can see both the container and units within it.
Bug Fixes:
Fixed inability to map hotkeys for resource3 or higher in bindings.txt.
Fixed issues with the following identifiers that were not functioning correctly:
mdg_ready and rdg_ready, including mdg_ready_vs and rdg_ready_vs.
mdg_cd_vs and rdg_cd_vs.
Fixed bugs affecting mdg_range_vs, rdg_range_vs, and minimal_range_vs that were not working as intended.
Resolved an issue where units inside containers did not play hit sound effects when attacking external targets.
After two months of hard work, I have improved SoundRTS, transforming it into a relatively open and highly flexible engine.
However, due to limited personal energy and the impossibility of covering all aspects on my own, I require the assistance of a large number of players to help with testing.
Additionally, I hope SoundMUD can provide guidance.
This version is far from being the final release, and I will continue to enhance it further—please stay tuned for future updates!

Funciones interesantes 

1. Major Improvements to Unit Properties
HP System:
hp_start: Allows you to set the initial HP of a unit.
hp_start_vs: Adjusts hp_start specifically for certain units (needs testing).
hp_max_vs: Adjusts hp_max specifically for certain units (needs testing).
Damage System:
The previous damage field has been replaced with the following damage types:
mdg (melee_damage): Specifies melee damage.
rdg (range_damage): Specifies ranged damage.
mdg_vs: Adjusts melee damage (mdg) specifically against certain units.
rdg_vs: Adjusts ranged damage (rdg) specifically against certain units.
New range-related fields:
mdg_range: Replaces the single range field for melee attacks.
rdg_range: The same functionality for ranged attacks.
mdg_minimal_range: Replaces the single minimal_range field for melee attacks.
rdg_minimal_range: The same functionality for ranged attacks.
mdg_range_vs: Adjusts melee range (mdg_range) specifically for certain units.
rdg_range_vs: Adjusts ranged range (rdg_range) specifically for certain units.
mdg_minimal_range_vs: Adjusts melee minimal range (mdg_minimal_range) specifically for certain units.
rdg_minimal_range_vs: Adjusts ranged minimal range (rdg_minimal_range) specifically for certain units.
New targeting-related fields:
mdg_targets: Replaces the previous target_types for melee attacks.
rdg_targets: Replaces the previous target_types for ranged attacks.
Attack delay and projectile simulation:
mdg_delay: Specifies the delay before a melee attack hits its target. For example, mdg_delay 0.2 means an attack takes 0.2 seconds to hit after being launched (a simulation of projectile travel time).
rdg_delay: The same functionality for ranged attacks.
mdg_blic/rdg_blic: Used to define projectile "arc" behavior (though not real projectiles, it's a simulation using hit delay).
Splash damage:
mdg_splash: Replaces the binary splash field with adjustable values (not just 0 or 1).
rdg_splash: The same functionality for ranged attacks.
mdg_radius: Replaces the single damage_radius field for melee splash damage.
rdg_radius: The same functionality for ranged splash damage.
mdg_splash_decay: Specifies splash damage falloff for melee attacks.
rdg_splash_decay: Specifies splash damage falloff for ranged attacks.
Defense System Improvements:
The previous armor field has been replaced with the following defense types:
mdf (melee_defense): Specifies melee defense.
rdf (range_defense): Specifies ranged defense.
mdf_vs: Adjusts melee defense (mdf) specifically for certain units.
rdf_vs: Adjusts ranged defense (rdf) specifically for certain units.
Attack Cooldowns and Pre-Hit Delays:
mdg_cd: Replaces the single cooldown field for melee attacks.
rdg_cd: The same for ranged attacks.
mdg_cd_vs: Adjusts mdg_cd specifically for certain units.
rdg_cd_vs: Adjusts rdg_cd specifically for certain units.
mdg_ready: Specifies melee attack preparation time.
rdg_ready: Specifies ranged attack preparation time.
mdg_ready_vs: Adjusts mdg_ready specifically for certain units.
rdg_ready_vs: Adjusts rdg_ready specifically for certain units.
Accuracy and Evasion:
mdg_cover: Specifies melee hit rate.
rdg_cover: Specifies ranged hit rate.
mdg_cover_vs: Adjusts mdg_cover specifically for certain units.
rdg_cover_vs: Adjusts rdg_cover specifically for certain units.
mdg_dodge: Specifies melee evasion rate.
rdg_dodge: Specifies ranged evasion rate.
mdg_dodge_vs: Adjusts mdg_dodge specifically for certain units.
rdg_dodge_vs: Adjusts rdg_dodge specifically for certain units.
Movement Speed:
speed: Specifies the base movement speed of a unit.
speed_vs: Adjusts speed specifically for certain units (needs testing).
Attack Sequence System:
For example:
mdg 12 
mdg_cd 1.5 
mdg_range 6 
damage_seq mdg 3 (damage 6 3 3) (interval 0.2) 
This configuration sets up a melee attack sequence that executes three melee attacks of 6, 3, and 3 damage (totaling mdg 12) over intervals of 0.2 seconds each.
2. Unit Behavior in Vehicles:
allow_units_attack: Allows specific units to attack external targets while inside a vehicle. For example:
allow_units_attack archer: Allows archers to attack from vehicles.
allow_units_attack archer footman: Allows multiple units (archer, footman) to attack from vehicles.
allow_units_attack all: Allows all units to attack from vehicles.
By default, units cannot attack from vehicles unless specified.
allow_units_add: Grants vehicles attribute bonuses when loading units.
For example:
allow_units_add speed 0.5: Each loaded unit adds 0.5 movement speed to the vehicle.
Multiple bonuses can be specified, such as:
allow_units_add speed 0.5 mdg 2 mdg_cd 1.5.
3. Upgrades System Enhancements:
Now, upgrades can be defined in a flexible way:
For example:
def melee_weapon_and_defense 
class upgrade 
cost 8 10 
time_cost 60 
effect bonus mdg 1 mdf 2 
Multi-level upgrades are also supported:
def lv1_melee_weapon 
class upgrade 
effect apply_bonus mdg 
def lv2_melee_weapon 
is_a lv1_melee_weapon 
def lv3_melee_weapon 
is_a lv2_melee_weapon 
def footman 
class soldier 
mdg_bonus 1 1 2  # Adds 1 `mdg` for the first two upgrades, and 2 `mdg` for the third. 
4. Skill System Enhancements:
Class definitions for skills now use class skill instead of class ability.
Skills support time_cost and cost parameters. For example:
def a_summon_dragon 
class skill 
requirements u_summon_dragon 
mana_cost 150 
cost 10 15 
time_cost 60 
effect summon 120 2 dragon 
5. Bug Fixes:
Fixed a bug where buildings loaded into transport units lost their meadow attribute.
6. New Gameplay Features:
Players can now enable or disable auto-retaliation mode for any unit during gameplay.
Added new "guard" and "chase" modes in addition to the existing "offensive" and "defensive" modes.
7. Resource System Update:
resource_type is now a string instead of 0 or 1. For example:
resource_type resource1; gold
resource_type resource2; wood
8. Sound System Improvements:
Added casting: Sound effects for skill preparation.
Replaced old fields with more specific ones:
mdg_missed and rdg_missed: Replace missed.
launch_matk and launch_ratk: Replace launch_attack.
matk_hit and ratk_hit: Replace attack_hit.
disappear: Plays when summoned units time out (different from death).
matk_dodge_vs and ratk_dodge_vs allow assigning different dodge sound effects for evading different units.
matk_hit_vs and ratk_hit_vs allow configuring different sound effects for hitting different units.
Added the shouts keyword: When the number of battling units exceeds 5, a battle cry sound will be played. For every additional 5 units, the volume increases by 1.
Adjusted the cooldown time for attack alerts